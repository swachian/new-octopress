<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类: svn | Hegel2011的博客]]></title>
  <link href="http://octopresszhangyu.herokuapp.com/blog/categories/svn/atom.xml" rel="self"/>
  <link href="http://octopresszhangyu.herokuapp.com/"/>
  <updated>2018-02-20T21:01:07+08:00</updated>
  <id>http://octopresszhangyu.herokuapp.com/</id>
  <author>
    <name><![CDATA[Hegel 2011]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Svnlook与代码统计]]></title>
    <link href="http://octopresszhangyu.herokuapp.com/blog/2012/03/01/svnlook/"/>
    <updated>2012-03-01T11:48:00+08:00</updated>
    <id>http://octopresszhangyu.herokuapp.com/blog/2012/03/01/svnlook</id>
    <content type="html"><![CDATA[<p>发现svnlook是一个很好的命令，可以帮助获得不少代码版本库中有用的信息。
有了这个东西后，各种统计都会变得有可能。</p>

<p>个人感觉，最有用的当属svn tree 命令</p>

<pre><code>svn tree . --full-paths
</code></pre>

<p>就能打出成排的版本库中的文件和目录。</p>

<p>比如为了获得java文件、jsp、xml的文件列表，可以分别执行下面的命令。</p>

<pre><code>svnlook tree . --full-paths | grep java$ | grep -v tags
svnlook tree . --full-paths | grep jsp$ | grep -v tags
svnlook tree . --full-paths | grep xml$ | grep -v tags
</code></pre>
]]></content>
  </entry>
  
</feed>
