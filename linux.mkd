# LINUX AS5操作系统设置手册




## 用户shell选择

Linux as系统所有增加用户一律采用/bin/bash的shell，用户环境变量编辑.bash_profile文件。

## 如何修改Linux主机名
1.修改 /etc/sysconfig/network，使得下次启动时使用新的主机名
hostname=newhostname
2.修改 /etc/hosts。不修改的话，apache等需要解析主机名的服务将不能启动
IP newhostname

## 启动远程x-window 服务

编辑文件/usr/share/gdm/defaults.conf ，[xdmcp]一节将Enable=false改成Enable=true；要想使用户root用户登录需要对[security] 一节将AllowRemoteRoot=false改成AllowRemoteRoot=true。修改文件后需要重启主机。
作用：方便pluswell双机软件图形界面操作

## 取消系统对core限制（ms模块必须）
以root登录，vi /etc/profile 修改
    ulimit -S -c 0 > /dev/null 2>&1
        为
        ulimit -S -c unlimited > /dev/null 2>&1
        添加 ulimit -n 8192，保存退出
        vi /etc/security/limits.conf
        添加如下两行，保存退出
        *               soft nofile 8192
        *               hard nofile 8192
        作用：这个是把core文件的限制去掉，程序一旦崩溃，可以得到core文件。
        开启系统服务
        chkconfig --level 5 telnet on
        chkconfig --level 5 rlogin on
        chkconfig --level 5 rsh on
        chkconfig --level 5 rexec on
        chkconfig --level 5 ip6tables off
        chkconfig --level 5 iptables off
        chkconfig --level 5 nfs on
        chkconfig --level 5 sendmail off
        chkconfig --level 5 vsftpd on
        内存管理
        在root用户的/bin下增加命令vi dropcache.sh，编辑内容：
        #!/bin/bash
        sync
        echo 3 > /proc/sys/vm/drop_caches
        修改可执行权限chmod 755 dropcache.sh，然后在root用户使用crontab –e编译定时器使其定时执行：
        0 4 * * * dropcache.sh
        代表每天凌晨4点执行dropcache.sh。
        作用：定时释放被cached占用的内存。
        时钟同步
        在非时钟源主机上使用crontab –e增加定时到时钟源同步时间的命令：
        0 * * * * /usr/sbin/ntpdate 210.72.145.44
        表示每天0点到210.72.145.44公网时钟源同步时间，要是有内网时钟源，只需修改地址即可。
        关于使用Mount文件系统必须注意的参数
        在其他项目中因进行频繁双机切换测试后，出现mount的磁盘柜上文件系统不能写操作，touch文件时提示“只读文件系统”，共享磁盘不能正常使用。
        因不明原因，所以重做了此文件系统的逻辑卷，重做完成后，提示“This filesystem will be automatically checked every 21 mounts or 180 days, whichever comes first.  Use tune2fs -c or -i to override.”
        这样问题明确了，因为此文件系统默认21次mount后进入只读状态，等待fsck。命令说明：tune2fs是linux下面重要的文件系统调整工具，其中的几个选项解释如下：
        -c：表示文件系统在mount次数达到设定后，需要运行fsck检查文件系统。
        -i：文件系统的检查间隔时间。系统在达到时间间隔时，自动检查文件系统。
        -l：显示文件系统的很多参数。
        -j：转换为ext3文件系统。

        可以使用-c 0关掉mount次数达到后的文件系统检查。使用-i 0关掉时间限制。
        将命令加到/etc/rc.local里，保证重启后也是关掉mount限制及时间限制。
        双网卡配置
        双网卡冗余设置，需要根据网络设备配置情况来决定，比如单台SWITCH，那么就可以不需要进行双网卡冗余设置。
        [root@linux220 network-scripts]# pwd
        /etc/sysconfig/network-scripts
        [root@linux220 network-scripts]# more ifcfg-bond0
        DEVICE=bond0
        BROADCAST=192.168.2.255
        IPADDR=192.168.2.220
        NETMASK=255.255.255.0
        NETWORK=192.168.2.0
        GATEWAY=192.168.2.226
        ONBOOT=yes
        BOOTPROTO=none
        USERCTL=no
        [root@linux220 network-scripts]# more ifcfg-eth0
        DEVICE=eth0
        ONBOOT=yes
        BOOTPROTO=none
        USERCTL=no
        MASTER=bond0
        SLAVE=yes
        [root@linux220 network-scripts]# more ifcfg-eth1
        DEVICE=eth1
        ONBOOT=yes
        BOOTPROTO=none
        USERCTL=no
        MASTER=bond0
        SLAVE=yes


          添加以下行到/etc/rc.local 文件
          modprobe bonding miimon=100 mode=1
          ifenslave bond0 eth0 eth1

## ssh免密码登录

采用私钥/公钥的方式可以建立**信任**主机，避免每次输入密码。其原理就是把自己的公钥交给对方，公钥只能解密私钥加密的信息，从而建立信任关系。

    # 主机1
    ssh-keygen -t rsa # 生成公钥id_rsa.pub

    # 主机2
    上传pub key到远程主机的用户下
    cat id_rsa.pub >> .ssh/authorized_keys
    chmod 600 .ssh/authorized_keys
    chmod 700 .ssh

## 增量备份(rsync)


r - remote，sync是把内存同步到硬盘
增量备份也会删除，不单只有增加

编辑配置文件`/etc/xinetd.d/rsync`, 设置`disable=no`,然后执行`service xinetd restart`

    /usr/bin/rsync -arHz --progress --delete penny@ip:/website /backup
    -a 保持所有属性 ls -l
    -r 递归
    -H 硬链接
    -z 优化备份速度
    --progress 显示执行进程，自动化时不需要
    -- delete 备份目录同步减少文件
    -e ssh 通过ssh通道加密

## NFS 网络文件服务

缺点: 安全性不好, 优点: 应用性好

    rpm -q portmap
    rpm -qa | grep nfs
    service portmap start
    service nfs start
    注: portmap一定要优先于nfs启动,从而给nfs提供端口

    rpcinfo -p # 检查服务启动的信息
配置文件位于 `/etc/exports`

    /public #允许所有主机访问/public目录
    /website 192.168.16.0(ro) #允许网段
配置完成后,重启nfs服务,或者`exportfs -rv`, `showmount -e 192.168.16.155`可查看nfs服务器共享的目录有哪些.

挂载时,先建目录`mkdir /mnt/website`, 再mount `mount 192.168.16.155:/website /mnt/website`, 运行`unmount /mnt/website`

### 自动挂载NFS共享

配置 `/etc/fstab`

    192.168.16.155:/website /mnt/website nfs ro 0 0


## 文件共享 Samba(桑巴)

SMB - Server Message Block, 服务器消息块
`rpm -q samba` #查询是否已安装samba
`/etc/samba/smb.conf`是samba的配置文件

* [global] 全局环境选项
* [home]   设置用户宿主目录共享
* [printers]
* [sharefiles]

`security: {share: 无权限， user: 缺省推荐 由Linux Samba服务器做验证}`

`smbpasswd -a user`, user必须是linux的系统用户， `smbstatus`可以查看访问的客户端信

用法1： 各自访问home目录，
用法2： 共享目录， 编辑`/etc/samba/smb.conf`，后重启服务, `testparm`会检察参数是否语法正确

    [共享名]
    path = 共享目录
    valid users = jack mary
    writable = = yes
用法3: 建立公共目录，只要不设置`valid users`即可
用法4：建立部门共享目录/hr，部门每个人都能读写，但不能删除别人的文件。秘诀是`chmod` `hr`下面的各目录权限。

## linux存档、压缩

`tar cf myfile.tar files/` 归档, `tar czf myfile.tar.gz files/`压缩归档.
`tar -tf m.tar` 查看tar文件, `j`替换`z`就把gz格式换成`bz2`.
`tree`可以看目录结构.
`tar -xvf m.tar.gz -C dest`  , 解压到指定目录.

## 磁盘阵列

1.创建raid

    mdadm -C /dev/md0 -ayes -l0 -n2 /dev/sd[a,b]1
    mdadm -C /dev/md0 -ayes -l1 -n2 /dev/sd[a,b]1
    mdadm -C /dev/md0 -ayes -l5 -n3 -x1 /dev/sd[a,b,c,c]1

`-C`: 创建, 以`md`开头的都是raid, `-ayes`激活, `-l0`: 等级, `-n2`: 数量, `/dev/sd[a,b]1`: 纳入的设备
`-x1`是热备盘的意思

2. 格式化及加载

`cat /proc/mdstat` 命令查看创建进度 , `mkfs.ext3 /dev/md0` 格式化raid为ex3格式, `mount /dev/md0 /mnt`挂载磁盘.
`/etc/fstab`文件添加一行, `/dev/md0   /raid5disk    ext3   defaults  0 0`

3. 删除、添加一个阵列

`fdisk -l` 查看磁盘状况.
`fdisk /dev/sdb` 对新硬盘进行操作, `m` for help, 根据提示再增加新的分区, 可以直接加为扩展分区(避免主分区的冲突),会直接以5开头. 产生 `/dev/sdb5` 和 `/dev/sdb6`

`partprobe`同步磁盘配置生效, `blkid`可现实磁盘状况.

`mdadm -D /dev/md0` 查看做好的磁阵的信息. `chunk size`表示多少个字节写到一个磁盘.

`umount /md0` , `mount -a` 测试自动挂载是否成功

4. 彻底删除

`mdadm -S /dev/md0` 停止raid, 停之前先`unmount`,最后擦掉超级快 `mdadm --zero-superblock /dev/sdb[5,6]`

`mdadm -Ds`可查看raid建立情况, 在6.0(新版linux内核)中需要执行`echo `mdadm -Ds`>>/etc/mdadm.conf` 把配置写入,否则会从md127开始编号


## lvm(逻辑卷管理)

屏蔽磁盘和分区的细节.

PV - 物理卷 ->(加) VG(卷组, 池)  ->(分) 逻辑卷

### 新建

和raid一样,先`fdisk` 分区 , 随后创建物理pv: `pvcreate /dev/sdb{12..14}`, 然后创建vg: `vgcreate vg0 /dev/sdb{12..14}`, 查看: `pvs`, `vgs`, `lvs`, 再创建lv: `lvcreate -L +100M -n1v0 /dev/vg0`, 最后再格式化和加载.

### 扩充

扩充lv: `lvextend -L +100M /dev/vg0/lv0`, 在线生效: `e2fsck -f /dev/vg0/lv0` && `resize2fs /dev/vg0/lv0`

扩充vg: `vgextend vg0 /dev/sdbx`

### 删除

先`umount`, 再`lvremove`

## Redhat 的策略和CentOS

[Redhat的版权回答](http://www.myexception.cn/linux-unix/272971.html)

> RHEL 仍然要遵守 GPL 协议！
但是 RHEL 以另外一种方式来操作：
收费用户提供binary版本并提供售后服务，binary是RPM格式的，刻录成光碟可以直接安装；
免费用户可以得到RPMS版本，即原代码，不能直接安装，必须用户自己编译，当然，也没有售后服务。
http://www.centos.org/ 编译有CentOS 与RHEL 一致的binary

Linux/Unix 发展的组件因素: C 语言、TCP/IP、自由软件运动. 移植和分享.

## 硬链接、软链接

`ls` 命令中, 第2列是表明有多少个硬链接(指向inode的引用)

    drwxr-xr-x  4 root    root        4096 2012-06-27 13:34 ../

`ln -s from to`软链接, `ln from to` 创建硬链接,实际上就是指向inode,因此硬链接不能跨设备/跨分区

`umask 0022`

## 查找文件

`which`, `whereis`

`find`

    # 选项 -name
    find . -name init # 精确查找
    find . -name init\* #通配符,匹配任意字符,包括0个字符
    find . -name init?  # 匹配单个字符

    # 选项 -size, 文件大小 block数据块, 512字节=0.5KB
    find / -size +204800 # 大于100MB的文件
    find / -size -204800 # 小于100MB的文件

    # 选项 -user, 文件所有者
    find / -user helen

    # 选项 -type, f 普通文件, l: 软链接文件, d: 目录
    find /etc -name init* -a -type l

    # 选项 时间(天) ctime, atime, mtime
    # 分钟 cmin, amin, mmin
    # c-change 改变, 表示文件的属性被修改过,所有者/权限等
    # a-access 访问
    # m-modify 修改, 表示正文内容被修改
    # -之内, +超过
    find /etc/ --mmin -120

    # 连接符
    # 1. -a and 与操作,  -o or  或操作
    find /etc -size +163840 -a -size -204800 #查找大于80MB小于100MB的文件
    # 2. find ... -exec 命令 {} \; # {}find 查找的结果, \执行命令的本意, \;必须联合写
    find /home -user helen -exec rm -rf {} \; #-ok 会操作前询问
    find . -inum 16 -exec rm {} \; # 根据i节点号查找

`grep`

## 帮助命令

`man`, `whatis`


## 软件包管理

### rpm

`rpm -e` 卸载软件包 `--nodeps` 强行卸载
`rpm -i` 安装
`rpm -q` 或 `rpm -qa` 查询某软件包
选项: `--excludedocs`: 不安装文档, `--prefix=`: 安装目录,不过大部分rpm包不允许指定目录, `--test`: 只对安装软件进行测试,并不实际安装, `--replacefiles`: 覆盖安装.

### yum

自动解决依赖关系, 方便的软件包升级

`yum install`, `yum check-update`, `yum update`, `yum info`: 提示软件安装包的介绍, `yum remove`: 删除

### 源码安装

源码安装需要指定固定目录,因为不像rpm包有固定的位置可通过命令删除.

`configure` 主要是针对不同平台搜集信息的,所以有些只适用于linux的软件,也就没必要configure了.

还有一类就是脚本安装, 这是参照windows的.

## Linux 引导流程

    firmware(CMOS/BIOS)      ->  POST加电自检
    自举程序BootLoader(GRUB) -> 载入内核
    载入Kernel               -> 驱动硬件
    启动init进程             -> 读取执行配置文件/etc/inittab

### 加电自检

与os无关, 只与硬件架构有关.
`hwclock` 硬件时钟, 与sysclock操作系统时间对应.

### 读取MBR(主引导记录), 载入自举程序

在0磁头0扇区, 存放着BootLoader 和 分区表.

GRUB Lilo 都是BootLoader. windows的则是ntldr(new technology)修改windows的`boot.ini`可更改启动对象.

`/etc/grub.conf`, linux的BootLoader配置文件. 作用在于载入内核.

### 内核(驱动硬件)

1. 识别硬件.内核中大部分都是驱动.
2. 启动进程init(pid=1)

PID为0的进程是内容调度器(kernel scheduler), 父进程消亡子进程必须消亡, 所以孤儿进程的父进程会变成init.

### /etc/inittab

runlevels: `id:5:initdefault`, `runlevel`: 查看运行级别, `init [0-6,Ss]`: 切换运行级别

`id:run-levels:action:process`

* action(状态)
  - initdefault
  - sysinit 系统启动就执行
  - respawn 总会再开这个服务

## 设置服务自启动

`etc/init.d` 下面, 在 `/etc/rc.d/rcx.d/`下面建立S开头的软链接.

`chkconfig` 检查运行状态, `chkconfig --levels 2345 sshd off`

### 检查硬件

`dmesg | grep` 能够找当前识别的硬件信息.

`/var/log/messages` 中存放有日志信息.

## GRUB配置

    title CentOS(www)
    root (hd0,0)
    kernel /boot/vmlinuz-2.6.18-274.18.1.el5 ro root=LABEL=/1 rhgb quiet #定义内核所在的位置
    initrd #载入镜像文件

### ROOT密码忘记(单用户模式应用)

`e`: 编辑当前的启动菜单项, `b`: 启动当前菜单项

按e编辑kernel, 在后面加一个数字就表示运行级别, 空格1表示单用户模式, 回车以后按b就可以运行.
**单用户模式进入系统不需要密码.**

grub也可以设置密码. `/etc/grub.conf` 增加`passwrod --md5 密文`

## 用户管理

### 用户类型

超级用户(UID=0), 普通用户: UID 500-60000, 伪用户: UID 1-499

### 用户的元文件

用户信息文件: `/etc/passwd`, 密码文件: `/etc/shadow`, 用户组文件: `/etc/group`, 用户组密码文件: `/etc/gshadow`,
用户配置文件: `/etc/login.defs` `/etc/default/useradd`, 新用户信息文件: `/etc/skel`,
登录信息: `/etc/motd` `/etc/issue`

## 特殊是权限`s`

`SetUID=4` 置位后会以所有者权限运行.

范例: 1: 将touch命令授予S位, 2: 将vi授予S位, 3: 查找SetUID程序 `find / -perm -4000 -o -perm -2000`

SetUID=4, 或者u+s, `chmod u+s`, `chmod 4755`

`SetGID=2`

`粘着位=1`, 针对其他人、针对目录且目录的权限是777, 置位后每个用户只能删除该目录下自己是所有者的文件

## John ripper

`run/unshadow /etc/passwd /etc/shadow > /tmp/test.shadow`
`run/john /tmp/test.shadow`

## 进程管理

`ps -aux`, `ps -ef`, `ps -uU user`, `pstree`
`kill`, `killall httpd`,

`/proc/partitions`, `/proc/cpuinfo`, `/proc/memory`
`pgrep httpd`, `pkill httpd`

`nohup`

### 进程的挂起和中止

`ctrl z`: 挂起, `ctrl c`: 中止,  `jobs`: 找出正在后台运行的进程
`fg 1`: 恢复到前台运行, `bg 1`: 放到后台运行

`top`, `-u`: 查某用户, `k`: 在里面直接杀死


## 计划任务

`at -f at.script hh:mm MM/DD/YY`, 位于`/var/spool/at`

`crontab {-l|-r|-e}`

## 进程处理方式

* standalone - 自己监听端口
* xinetd     - 监听由某进程负责, 收到请求后转发
* atd crond 计划任务

## Linux 文件系统管理

### 文件系统构成

所有设备都放在 `/dev` 下, `lost+found` 存放一些出错信息

`df -h`: 查看分区空间, `du -sh /`: 查看目录的大小
`fsck -y /dev/sda2`: file system check, `e2fsck -p`: 检测文件系统及修复文件系统
`file`: 判断文件类型.

### 设备挂载

`mount /dev/cdrom /mnt/cdrom`: 挂载光驱, `umount`: 卸载目录设备

### 分区与格式化原理

`fdisk`: 分区, `m`: 帮助, `p`: 显示分区表, `n`: 添加新分区, `t`: 改变分区文件, `w`: 保存分区操作.

`mkfs`: 格式化, `mkfs -t ext3` 或者 `mkfs.ext3 /dev/sdb1 `

`mount`, 先建立目录, 然后`mount /dev/sdba /web`

写入`/etc/fstab`
`物理分区名/卷标    挂载点  文件系统类型 缺省设置  是否检测(1/0) 检测顺序(0,1,2)`

### 扩容swap实例

`dd if=/dev/sda1 of=/dev/sda2`:  拷贝sda1到sda2
`dd if=/dev/zero of=/var/swap/file.swp bs=1024k count=64`: `bs`是blocksize, count是写n次block
`mkswap /var/swap/file.swp`, `swapon /var/swap/file.swp`

### 磁盘配额

1. 修改`/etc/fstab`: `/dev/sd3 /home ext3 defaults,usrquota 1 2`, && `mount -o remount /home`
2. `quotacheck -cvug /test`, 会产生`aquota.user` 配置文件
3. `quotaon /test`: 启动配额功能, `quotanoff`: 关闭.
4. `edquota helen`: 编辑用户信息

软限制: 只是警告, 硬限制: 超出则报错.

## 备份

备份的分区可以需要时再mount

`cp -Rpu`: 增量备份, `-p`:不修改时间, `-u`: 增量备份

`tar` 可同时打包多个目录

### 备份日志表格范例

- 机器名称 IP地址 存放位置
- 截止及编号
- 备份命令

## Linux 网络设置

`arp -a`, `arp -d ip`, `arp -s ip mac`
`rarp`: 反向查询ip地址

### 域名解析

`/etc/hosts`: `ip 主机名或域名  别名`

DNS

### 网卡

`ifconfig eth0:1 ip2`: 设置两个ip地址, bond技术

### 网卡配置文件

    /etc/sysconfig/network-scripts/ifcfg-eth0下
    IPADDR=新IP地址
    GATEWAY=网关
    NETMASK

### 主机名

    /etc/sysconfig/network
    HOSTNAME=主机名

`/etc/rc.d/init.d/network star/stop/restart`

`/etc/services`: 网络服务信息的文件

### DNS服务器地址指定

    /etc/resolv.conf # 指定DNS服务器
    nameserver ip # 一般最多设置3个

### 几个网络命令

`ifconfig `
`ethtool eth0`: 检测网卡链接
`arp`
`ping`, `-s`可指定ping包的大小
`route`: 操作路由表, 一般可以写到sysconfig的配置文件里面
**zerba**路由器软件, 类似cisco的操作命令.


