---
layout: post
title: "Clean Code"
date: 2018-05-01 14:23
comments: true
categories: 
- 技术
- java
---

Uncle Bob的这本书也是一本名著了，书籍本身其实就是讲编程风格的，可以把编码技能磨砺的
更锋利些。

全书的要旨在于每一次重构都要让代码更加整洁，同时测试代码和业务代码一样对待。具体开始做起来，则是从很小之处开始着手。

1. **命名**是很重要的一个东西，好的命名可以省下很多注释，因为好的命名本身就帮助理解程序。命名包括了方法名和变量名。

2. **函数**要尽可能的短，比如20行，可以在一屏里面显示，如果一个方法太长，那么肯定是命名没有弄好，可以继续拆分。此外，**参数**要尽可能的少，能不要参数就不要参数，一个参数好于二个参数，二个参数好于三个参数，三个参数是大部分方法的极限。

3. **注释**以阐述为主，不要使用太多的废话，如果确定要写注释，也要认真编写。

4. **格式**是多个代码之间的关联和布局规则。Bob推荐类似报纸的编写方式，大标题后面跟随小标题，比如大的`public`方法后面跟随小的`private`方法。和函数的规则一样，垂直相关的内容尽量放在一起。

5. **数据和对象**牵涉偏向过程还是偏向面向对象。对于面向对象来讲，一般不增加method而是增加类型，对面向过程来讲，一般增加方法而不动数据结构，现实中肯定是二者皆有。 

6. **错误处理**错误处理粗返回码外，也可以考虑使用异常来进行封装。

7. **边界**划分好后，对第三方的库和方法要单独测试和封装，以减少对本系统的影响。

8. **类**也要单一权责，内聚，可以用许多短小的类来构建程序。

多用`Enum`，少用`const`  
多用`strategy`, `template`，少用`if`, `switch`  
